{"entries":[{"timestamp":1741135194885,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"/**\n * Dance Robot for Bit:Bot using Microphone Beat Detection\n */\nlet dancingActive = false\n\n// Mapping function similar to Python's map\nfunction mapValue(value: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n    return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin\n}\n\n// Main dancing function\nfunction performDance() {\n    // Check if dancing is active\n    if (!dancingActive) return\n\n    // Get sound level\n    let soundLevel = input.soundLevel()\n\n    // Servo control for hands\n    if (soundLevel > 50) {\n        // Map sound level to servo positions\n        let leftSwing = mapValue(soundLevel, 0, 255, 0, 180)\n        let rightSwing = mapValue(soundLevel, 0, 255, 180, 0)\n\n        // Set servos \n        pins.servoWritePin(AnalogPin.P1, leftSwing)\n        pins.servoWritePin(AnalogPin.P2, rightSwing)\n    }\n\n    // Dancing movements based on sound intensity\n    if (soundLevel > 100) {\n        // More intense dance for stronger beats\n        bitbot.move(BBDirection.Forward, 60, 60)\n        basic.pause(50)\n        bitbot.move(BBDirection.Left, 60, 60)\n        basic.pause(50)\n        bitbot.move(BBDirection.Right, 60, 60)\n    } else if (soundLevel > 50) {\n        // Subtle movement for softer sounds\n        bitbot.move(BBDirection.Forward, 30, 30)\n        basic.pause(50)\n        bitbot.move(BBDirection.Backward, 30, 30)\n    }\n\n    // Random dance move generator\n    if (Math.randomRange(0, 100) < 10) {\n        // Occasional random dance moves\n        let moveType = Math.randomRange(0, 3)\n        switch (moveType) {\n            case 0:\n                bitbot.move(BBDirection.Left, 60, 60)\n                break\n            case 1:\n                bitbot.move(BBDirection.Right, 60, 60)\n                break\n            case 2:\n                bitbot.move(BBDirection.Backward, 60, 60)\n                basic.pause(200)\n                bitbot.move(BBDirection.Forward, 60, 60)\n                break\n        }\n    }\n\n    // Stop movement\n    bitbot.stop()\n}\n\n// Button A starts/stops dancing\ninput.onButtonPressed(Button.A, () => {\n    dancingActive = !dancingActive\n\n    // Visual feedback\n    if (dancingActive) {\n        basic.showIcon(IconNames.Happy)\n    } else {\n        basic.showIcon(IconNames.Sad)\n        // Stop motors and reset servos when stopped\n        bitbot.stop()\n        pins.servoWritePin(AnalogPin.P1, 90)\n        pins.servoWritePin(AnalogPin.P2, 90)\n    }\n})\n\n// Continuous dancing loop\nbasic.forever(() => {\n    if (dancingActive) {\n        performDance()\n        basic.pause(100)\n    }\n})\n\n// Initial setup\nbasic.showIcon(IconNames.Heart)"],[1,"\n"]],"start1":0,"start2":0,"length1":2626,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"BitBot\": \"github:4tronix/bitbot#v2.1.13\""],[0,"\n   "]],"start1":147,"start2":147,"length1":59,"length2":8},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":244,"start2":244,"length1":32,"length2":31}]}]},{"timestamp":1741135577591,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"*\n *"],[-1," Bit:Bot Pro"],[0," Danc"],[-1,"ing"],[1,"e"],[0," Robot "],[-1,"with"],[1,"for Bit:Bot using"],[0," Mic"]],"start1":2,"start2":2,"length1":39,"length2":38},{"diffs":[[0,"n\n *"],[-1," Uses MakeCode Bit:Bot extension (for Bit:Bot Classic/Pro).\n * This code is designed for the Bit:Bot Pro, utilizing its two servo connections\n * for arm movements, and built in wheel encoders.\n * Requires a 3D printed attachment for arms connected to the servos.\n*/\n\n// Configuration Constants (Adjust as needed)\nconst SWING_ANGLE = 45;        // Max servo swing angle (degrees)\nconst SWING_SPEED = 80;         // Servo swing speed (0-100)\nconst MOVE_SPEED = 40;         // Robot forward/backward speed (0-100)\nconst SOUND_THRESHOLD = 80;    // Microphone sensitivity (adjust for your environment)\nconst DANCE_DURATION = 1000;    // How long each \"dance move\" lasts (ms).  Good to keep it relatively short.\nconst SHORT_DELAY = 100; "],[1,"/\nlet dancingActive = false\n\n// Mapping function similar to Python's map\nfunction mapValue(value: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n    return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin\n}\n\n// Main dancing function\nfunction performDance() {\n    // Check if dancing is active\n    if (!dancingActive) return\n\n"],[0,"    "],[-1," "],[0,"//"],[-1,"Short delay to smooth movements.\nconst ARM_LEFT_SERVO = bitbot.Servos.S1\nconst ARM_RIGHT_SERVO = bitbot.Servos.S2\n\n// Global Variables\nlet leftArmCenter = 90;       // Center position for left arm servo\nlet rightArmCenter = 90;     // Center position for right arm servo\nlet isDancing = false;        // Flag to indicate dancing state\nlet lastSoundLevel = 0;       // Store the previous "],[1," Get sound level\n    let soundLevel = input.soundLevel()\n\n    // Servo control for hands\n    if (soundLevel > 50) {\n        // Map sound level to servo positions\n        let leftSwing = mapValue(soundLevel, 0, 255, 0, 180)\n        let rightSwing = mapValue("],[0,"sound"],[-1," l"],[1,"L"],[0,"evel"],[-1,"\nlet beatDetected = false;     // Flag for beat detection\nlet movementCounter = 0;     // Count robot moves to keep it in the approx same place.\n\n\n// Initialize servos to center position\nbitbot.select_model(BBModel.Pro)\nbitbot.servo(ARM_LEFT_SERVO, leftArmCenter);\nbitbot.servo(ARM_RIGHT_SERVO, rightArmCenter);\nbasic.pause(500); // Give servos time to settle\n\nfunction danceStep() {\n    // 1. Swing Arms\n    bitbot.servo(ARM_LEFT_SERVO, leftArmCenter + SWING_ANGLE);\n"],[1,", 0, 255, 180, 0)\n\n        // Set servos \n        pins.servoWritePin(AnalogPin.P1, leftSwing)\n        pins.servoWritePin(AnalogPin.P2, rightSwing)\n    }\n\n    // Dancing movements based on sound intensity\n    if (soundLevel > 100) {\n        // More intense dance for stronger beats\n  "],[0,"    "],[1,"  "],[0,"bitbot."],[-1,"servo(ARM_RIGHT_SERVO, rightArmCenter - SWING_ANGLE);\n    basic.pause(DANCE_DURATION / 4);\n\n    bitbot.servo(ARM_LEFT_SERVO, leftArmCenter - SWING_ANGLE);\n    bitbot.servo(ARM_RIGHT_SERVO, rightArmCenter + SWING_ANGLE);\n"],[1,"move(BBDirection.Forward, 60, 60)\n        basic.pause(50)\n        bitbot.move(BBDirection.Left, 60, 60)\n   "],[0,"    "],[1," "],[0,"basi"]],"start1":61,"start2":61,"length1":1848,"length2":1061},{"diffs":[[0,"use("],[-1,"DANCE_DURATION / 4);\n\n\n    // 2.  Move body.  Alternating forward and backward steps.\n    if (movementCounter % 2 == 0) { //Forward"],[1,"50)\n        bitbot.move(BBDirection.Right, 60, 60)\n    } else if (soundLevel > 50) {\n        // Subtle movement for softer sounds"],[0,"\n   "]],"start1":1126,"start2":1126,"length1":139,"length2":137},{"diffs":[[0,".move(BB"],[-1,"Motor"],[1,"Direction"],[0,".Forward"]],"start1":1274,"start2":1274,"length1":21,"length2":25},{"diffs":[[0,"on.Forward, "],[-1,"MOVE_SPEED"],[1,"30, 30"],[0,")\n        ba"]],"start1":1289,"start2":1289,"length1":34,"length2":30},{"diffs":[[0,"use("],[-1,"DANCE_DURATION / 2);\n        bitbot.stop(BBStopMode.Brake)\n\n    } else { //Backwards\n        bitbot.move(BBMotor.Backward, MOVE_SPEED)\n        basic.pause(DANCE_DURATION / 2);\n        bitbot.stop(BBStopMode.Brake"],[1,"50)\n        bitbot.move(BBDirection.Backward, 30, 30)\n    }\n\n    // Random dance move generator\n    if (Math.randomRange(0, 100) < 10) {\n        // Occasional random dance moves\n        let moveType = Math.randomRange(0, 3"],[0,")\n    "],[-1,"}\n"],[0,"    "],[-1,"movementCounter++;\n\n    // 3. Return Arms to center.  Important to do this *after* body movement,"],[1,"switch (moveType) {\n            case 0:"],[0,"\n    "],[-1,"//"],[0,"    "],[-1,"so they don't impede the wheels\n    bitbot.servo(ARM_LEFT_SERVO, leftArmCenter);\n    bitbot.servo(ARM_RIGHT_SERVO, rightArmCenter);\n    basic.pause(SHORT_DELAY);  // short delay before next step\n\n}\n\n\n// Main Loop - Continuously monitor sound and dance if beat detected\nbasic.forever(function () {\n    lastSoundLevel = input.soundLevel();\n\n    if (lastSoundLevel > SOUND_THRESHOLD) {\n        if (!beatDetected) {  // Only trigger on the *rising* edge of the sound\n            beatDetected = true;\n            if (!isDancing) {\n                isDancing = true;"],[1,"        bitbot.move(BBDirection.Left, 60, 60)\n                break\n            case 1:\n                bitbot.move(BBDirection.Right, 60, 60)\n                break\n            case 2:\n                bitbot.move(BBDirection.Backward, 60, 60)\n                basic.pause(200)\n                bitbot.move(BBDirection.Forward, 60, 60)\n                break"],[0,"\n   "]],"start1":1325,"start2":1325,"length1":899,"length2":642},{"diffs":[[0,"    "],[1,"}\n"],[0,"    "],[1,"}\n\n"],[0,"    "],[-1,"danceStep();  // Perform a single dance step on beat detection\n                isDancing = false;\n            }\n        }\n    } else {\n        beatDetected = false; // Reset beat detection when sound level drops"],[1,"// Stop movement\n    bitbot.stop()\n}\n\n// Button A starts/stops dancing\ninput.onButtonPressed(Button.A, () => {\n    dancingActive = !dancingActive\n\n    // Visual feedback\n    if (dancingActive) {\n        basic.showIcon(IconNames.Happy)\n    } else {\n        basic.showIcon(IconNames.Sad)\n        // Stop motors and reset servos when stopped"],[0,"\n    "],[-1,"}\n\n"],[0,"    b"],[-1,"asic.pause(20); // Small delay for responsiveness and to prevent excessive CPU usage\n})\n\n\n// Optional:  Display sound level on LEDs (useful for debugging)\n// Remove or comment out if y"],[1,"itbot.stop()\n        pins.servoWritePin(AnalogPin.P1, 90)\n        pins.servoWritePin(AnalogPin.P2, 90)\n    }\n})\n\n// Continu"],[0,"ou"],[1,"s"],[0," d"],[-1,"on't want the LED display.\nbasic.forever(function () {\n    led.plotBarGraph(lastSoundLevel, 255);  //Show sound level.\n}"],[1,"ancing loop\nbasic.forever(() => {\n    if (dancingActive) {\n        performDance()\n        basic.pause(100)\n    }\n})\n\n// Initial setup\nbasic.showIcon(IconNames.Heart"],[0,")"]],"start1":1968,"start2":1968,"length1":545,"length2":658}]}]},{"timestamp":1741136141809,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,":Bot Pro"],[1,", utilizing its two servo connections\n * for arm movements, and built in wheel encoders"],[0,".\n * Req"]],"start1":162,"start2":162,"length1":16,"length2":103},{"diffs":[[0,"servos.\n"],[-1," "],[0,"*/\n\n// C"]],"start1":321,"start2":321,"length1":17,"length2":16},{"diffs":[[0,"egrees)\n"],[1,"const SWING_SPEED = 80;         // Servo swing speed (0-100)\n"],[0,"const MO"]],"start1":437,"start2":437,"length1":16,"length2":77},{"diffs":[[0,"ts (ms)."],[1,"  Good to keep it relatively short."],[0,"\nconst S"]],"start1":729,"start2":729,"length1":16,"length2":51},{"diffs":[[0,"O = "],[-1,"1;    // "],[1,"bitbot."],[0,"Servo"],[-1," "],[1,"s.S"],[0,"1\nco"]],"start1":857,"start2":857,"length1":23,"length2":23},{"diffs":[[0,"O = "],[-1,"2;   // "],[1,"bitbot."],[0,"Servo"],[-1," "],[1,"s.S"],[0,"2\n\n/"]],"start1":898,"start2":898,"length1":22,"length2":23},{"diffs":[[0,"ot moves"],[-1,"."],[1," to keep it in the approx same place.\n"],[0,"\n\n// Ini"]],"start1":1302,"start2":1302,"length1":17,"length2":54},{"diffs":[[0,"position\nbitbot."],[-1,"bbSetS"],[1,"select_model(BBModel.Pro)\nbitbot.s"],[0,"ervo(ARM_LEFT_SE"]],"start1":1381,"start2":1381,"length1":38,"length2":66},{"diffs":[[0,"er);\nbitbot."],[-1,"bbSetS"],[1,"s"],[0,"ervo(ARM_RIG"]],"start1":1463,"start2":1463,"length1":30,"length2":25},{"diffs":[[0,"Arms"],[-1," (Opposite directions)"],[0,"\n   "]],"start1":1603,"start2":1603,"length1":30,"length2":8},{"diffs":[[0,"Arms\n    bitbot."],[-1,"bbSetS"],[1,"s"],[0,"ervo(ARM_LEFT_SE"]],"start1":1603,"start2":1603,"length1":38,"length2":33},{"diffs":[[0,"LE);\n    bitbot."],[-1,"bbSetS"],[1,"s"],[0,"ervo(ARM_RIGHT_S"]],"start1":1666,"start2":1666,"length1":38,"length2":33},{"diffs":[[0,"4);\n\n    bitbot."],[-1,"bbSetS"],[1,"s"],[0,"ervo(ARM_LEFT_SE"]],"start1":1769,"start2":1769,"length1":38,"length2":33},{"diffs":[[0,"LE);\n    bitbot."],[-1,"bbSetS"],[1,"s"],[0,"ervo(ARM_RIGHT_S"]],"start1":1832,"start2":1832,"length1":38,"length2":33},{"diffs":[[0,"TION / 4);\n\n"],[1,"\n"],[0,"    // 2. Mo"]],"start1":1928,"start2":1928,"length1":24,"length2":25},{"diffs":[[0,"   // 2."],[1," "],[0," Move bo"]],"start1":1942,"start2":1942,"length1":16,"length2":17},{"diffs":[[0,"ve body."],[1," "],[0," Alterna"]],"start1":1954,"start2":1954,"length1":16,"length2":17},{"diffs":[[0,"Alternat"],[-1,"e"],[1,"ing"],[0," forward"]],"start1":1964,"start2":1964,"length1":17,"length2":19},{"diffs":[[0,"backward"],[1," steps"],[0,".\n    if"]],"start1":1988,"start2":1988,"length1":16,"length2":22},{"diffs":[[0," == 0) {"],[1," //Forward"],[0,"\n       "]],"start1":2031,"start2":2031,"length1":16,"length2":26},{"diffs":[[0,"itbot.mo"],[1,"ve(BBMo"],[0,"tor"],[-1,"("],[1,"."],[0,"Forward,"]],"start1":2059,"start2":2059,"length1":20,"length2":27},{"diffs":[[0,"EED)"],[-1,"; // Corrected: No 'bitbot.' prefix"],[0,"\n   "]],"start1":2094,"start2":2094,"length1":43,"length2":8},{"diffs":[[0,"ake)"],[-1,";           // Corrected: No 'bitbot.' prefix"],[1,"\n"],[0,"\n   "]],"start1":2173,"start2":2173,"length1":53,"length2":9},{"diffs":[[0,"e)\n\n    } else {"],[1," //Backwards"],[0,"\n        bitbot."]],"start1":2175,"start2":2175,"length1":32,"length2":44},{"diffs":[[0,"itbot.mo"],[-1,"tor"],[1,"ve"],[0,"(BBMotor"]],"start1":2213,"start2":2213,"length1":19,"length2":18},{"diffs":[[0,"EED)"],[-1,";// Corrected: No 'bitbot.' prefix"],[0,"\n   "]],"start1":2249,"start2":2249,"length1":42,"length2":8},{"diffs":[[0,"ake)"],[-1,";           // Corrected: No 'bitbot.' prefix"],[0,"\n   "]],"start1":2328,"start2":2328,"length1":53,"length2":8},{"diffs":[[0,"o center"],[1,".  Important to do this *after* body movement,\n    //    so they don't impede the wheels"],[0,"\n    bit"]],"start1":2386,"start2":2386,"length1":16,"length2":104},{"diffs":[[0,"eels\n    bitbot."],[-1,"bbSetS"],[1,"s"],[0,"ervo(ARM_LEFT_SE"]],"start1":2478,"start2":2478,"length1":38,"length2":33},{"diffs":[[0,"bot."],[-1,"bbSetS"],[1,"s"],[0,"ervo"]],"start1":2539,"start2":2539,"length1":14,"length2":9},{"diffs":[[0,"AY);"],[1,"  // short delay before next step\n"],[0,"\n}\n\n"],[1,"\n"],[0,"// M"]],"start1":2608,"start2":2608,"length1":12,"length2":47},{"diffs":[[0,"ain Loop"],[1," - Continuously monitor sound and dance if beat detected"],[0,"\nbasic.f"]],"start1":2655,"start2":2655,"length1":16,"length2":72},{"diffs":[[0,"ected) {"],[1,"  // Only trigger on the *rising* edge of the sound"],[0,"\n       "]],"start1":2854,"start2":2854,"length1":16,"length2":67},{"diffs":[[0,"eStep();"],[1,"  // Perform a single dance step on beat detection"],[0,"\n       "]],"start1":3031,"start2":3031,"length1":16,"length2":66},{"diffs":[[0,"= false;"],[1," // Reset beat detection when sound level drops"],[0,"\n    }\n"],[1,"\n"],[0,"    basi"]],"start1":3183,"start2":3183,"length1":23,"length2":71},{"diffs":[[0,"20);"],[1," // Small delay for responsiveness and to prevent excessive CPU usage"],[0,"\n})\n\n"],[1,"\n"],[0,"// O"]],"start1":3262,"start2":3262,"length1":13,"length2":83},{"diffs":[[0,"ptional:"],[1," "],[0," Display"]],"start1":3345,"start2":3345,"length1":16,"length2":17},{"diffs":[[0,"nd level"],[1," on LEDs (useful for debugging)\n// Remove or comment out if you don't want the LED display."],[0,"\nbasic.f"]],"start1":3366,"start2":3366,"length1":16,"length2":107},{"diffs":[[0,"l, 255);"],[1,"  //Show sound level."],[0,"\n})"]],"start1":3528,"start2":3528,"length1":11,"length2":32}]}]},{"timestamp":1741136734131,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"es><"],[-1,"variable id=\"iC6pF~/(m6G}Wzet=S~:\">moveType</variable><variable id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</variable><variable id=\"-X(~sh(tbdqXx:7+)[bU\">movementCounter</variable><variable id=\"g?+%^C#MtOFl+NTjAf%U\">MOVE_SPEED</variable><variable id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</variable><variable id=\"-C39nIq=xM:T=hVo3$)u\">accumulatedRotation</variable><variable id=\"!e9vs/~IwS9XIb;./A}d\">correctionTime</variable><variable id=\"k}(0t^lgxo;l67C{R.Pf\">ROTATION_CORRECTION_FACTOR</variable><variable id=\"5x9f^?i9BP-Ykn5e4e3=\">SHORT_DELAY</variable><variable id=\"!0rq^rF]MPmuj[3HKlUX\">lastSoundLevel</variable><variable id=\"PHqMY4E@p=4j`PRh%(`P\">SOUND_THRESHOLD</variable><variable id=\"qBCk*UpJ`m1t[.(n?E0|\">beatDetected</variable><variable id=\"eg1bj;oc(H4Mc.%c%#S;\">isDancing</variable><variable id=\"Tr)DLXkA}!L1e!/wP?OE\">SWING_ANGLE</variable><variable id=\"LfFs2^kwtR/JP]m:[8hn\">ARM_LEFT_SERVO</variable><variable id=\"6vS!u.R+Ehi4ZUi|uc+}\">ARM_RIGHT_SERVO</variable><variable id=\"q1%$!`xALG]+4_(PfT%=\">leftArmCenter</variable><variable id=\"H7bbu+06MMq?8PF|ksU1\">rightArmCenter</variable></variables><comment id=\"l$l.9Fx+)w}-l4cF59?R\" x=\"2538\" y=\"0\" w=\"480\" h=\"120\">\nBit:Bot Pro Dancing Robot with Microphone Beat Detection and Position Correction\nUses MakeCode Bit:Bot extension (for Bit:Bot Classic/Pro).\n</comment><block type=\"pxt-on-start\" id=\"wx~5]fobv#W,vaDc4@PX\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"variables_set\" id=\"uo1+28f[T=Jo6z;6Wc`!\"><field name=\"VAR\" id=\"Tr)DLXkA}!L1e!/wP?OE\">SWING_ANGLE</field><comment pinned=\"false\" h=\"80\" w=\"160\">Configuration Constants</comment><data>0</data><value name=\"VALUE\"><shadow type=\"math_number\" id=\"2O^8[%LT%ko)J/xIQ~*H\"><field name=\"NUM\">45</field></shadow></value><next><block type=\"variables_set\" id=\"`R.(aa5Lz]4r*I3@Tm-d\"><field name=\"VAR\" id=\"g?+%^C#MtOFl+NTjAf%U\">MOVE_SPEED</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"~N.TdY!c|mnFhM6,?:?8\"><field name=\"NUM\">40</field></shadow></value><next><block type=\"variables_set\" id=\"ohGljVsh-)Ww%$^Z3$?B\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"Wt5RpI+$B+;J[jS.(A:8\"><field name=\"NUM\">40</field></shadow></value><next><block type=\"variables_set\" id=\"7X{x0_]jbEsQ;dX-*1!/\"><field name=\"VAR\" id=\"PHqMY4E@p=4j`PRh%(`P\">SOUND_THRESHOLD</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\":Xn(ne^jN-zL+k5XZH4@\"><field name=\"NUM\">80</field></shadow></value><next><block type=\"variables_set\" id=\"-%]zqjoNGz5?*FzbCf4.\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"soFnID}cTF_i9$RTGuO[\"><field name=\"NUM\">500</field></shadow></value><next><block type=\"variables_set\" id=\"kQ;.W6l%viU*TsnvD{.s\"><field name=\"VAR\" id=\"5x9f^?i9BP-Ykn5e4e3=\">SHORT_DELAY</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"VwW!Hv7U`USqhh(cuG|P\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"variables_set\" id=\"d^9fN]zFhB!436;e*NeD\"><field name=\"VAR\" id=\"LfFs2^kwtR/JP]m:[8hn\">ARM_LEFT_SERVO</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"p#uN*dXhLp5UFEN=|V0]\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"variables_set\" id=\"kA(T:jA1:9:J_PuPh9Fk\"><field name=\"VAR\" id=\"6vS!u.R+Ehi4ZUi|uc+}\">ARM_RIGHT_SERVO</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"/z/qS:H-JTL@|T+Up=)2\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"variables_set\" id=\"~/!rGF%8KJ708A@TLI8p\"><field name=\"VAR\" id=\"k}(0t^lgxo;l67C{R.Pf\">ROTATION_CORRECTION_FACTOR</field><comment pinned=\"false\" h=\"80\" w=\"160\">Adjust this (0.8 - 1.0)</comment><value name=\"VALUE\"><shadow type=\"math_number\" id=\"k.#3Ni{{Y2,owf)L`aJi\"><field name=\"NUM\">0.95</field></shadow></value><next><block type=\"variables_set\" id=\"Wvrx7B[zMfGr:0|k9Q0-\"><field name=\"VAR\" id=\"q1%$!`xALG]+4_(PfT%=\">leftArmCenter</field><comment pinned=\"false\" h=\"80\" w=\"160\">Global Variables</comment><value name=\"VALUE\"><shadow type=\"math_number\" id=\"UkjZ`G{jA0uqKB[om^X(\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"variables_set\" id=\"a-,V0$/V]jJd/2asJ:Gc\"><field name=\"VAR\" id=\"H7bbu+06MMq?8PF|ksU1\">rightArmCenter</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"F$i4Is}07+Ym*MF2=0zs\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"typescript_statement\" id=\"zi}ZV_9wZ^I(N9`l@vKZ\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter);\" numlines=\"1\"></mutation><next><block type=\"typescript_statement\" id=\"8af-O3j^AiiODbi$YV+-\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter);\" numlines=\"1\"></mutation><next><block type=\"device_pause\" id=\"on9U=`_Ie+9;V7{m{RP5\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"zX1$H#;!.!cowT7@=,i{\"><field name=\"ms\">500</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type=\"device_forever\" id=\"9,cOx0-pIoV$y+VEbusw\" x=\"526\" y=\"0\"><comment pinned=\"false\" h=\"80\" w=\"160\">Optional: Display sound level</comment><statement name=\"HANDLER\"><block type=\"device_plot_bar_graph\" id=\"LjmirNt(8!6,$k[gPdN{\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" _expanded=\"0\" _input_init=\"true\"></mutation><value name=\"value\"><block type=\"variables_get\" id=\"$qeyu^~h!LxT5q1rbPx]\"><field name=\"VAR\" id=\"!0rq^rF]MPmuj[3HKlUX\">lastSoundLevel</field></block></value><value name=\"high\"><shadow type=\"math_number\" id=\"P#};qIS@-M%%*Tp74U,s\"><field name=\"NUM\">255</field></shadow></value></block></statement></block><block type=\"device_forever\" id=\"!C)BK94-jkT1W48VzJ6*\" x=\"927\" y=\"0\"><comment pinned=\"false\" h=\"80\" w=\"160\">Main Loop</comment><statement name=\"HANDLER\"><block type=\"variables_set\" id=\"}CA{]Vw~UKDNpo?NHq$W\"><field name=\"VAR\" id=\"!0rq^rF]MPmuj[3HKlUX\">lastSoundLevel</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"DS@Q^~K5c;jRz~1jB{:G\"><field name=\"NUM\">0</field></shadow><block type=\"device_get_sound_level\" id=\"Ra%`*DvsGk@kWojAm^@R\"></block></value><next><block type=\"controls_if\" id=\"fZxZ[:=B/s^0%j@iXuV]\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"*#7yEvuqIaU0rpA#C{IA\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"}4-wO$v88,vWUOpT3MCf\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\" id=\"ITU2$eYhGt#.Hp8EzjuG\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"5pFeRB=-_N+93^g}*0xv\"><field name=\"VAR\" id=\"!0rq^rF]MPmuj[3HKlUX\">lastSoundLevel</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"{|d/.TcF.tx/=v[%6*ul\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"Z}`L^^a|/4A(%PazzSaQ\"><field name=\"VAR\" id=\"PHqMY4E@p=4j`PRh%(`P\">SOUND_THRESHOLD</field></block></value></block></value><statement name=\"DO0\"><block type=\"controls_if\" id=\"q,~2`Xm0Y#WR21_oC!6z\"><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"setB5$prf@6~ZdVYRAv6\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_negate\" id=\"c)8-Iix[ZNo*@^HNTDnO\"><value name=\"BOOL\"><shadow type=\"logic_boolean\" id=\"1$]f6TI(ZW][pF=C(5tV\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"I@?=i$#W3Lbql|kiIAU*\"><field name=\"VAR\" id=\"qBCk*UpJ`m1t[.(n?E0|\">beatDetected</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"tLbaTs.:!W?|5Fj~j?F!\"><field name=\"VAR\" id=\"qBCk*UpJ`m1t[.(n?E0|\">beatDetected</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"dOsJgmHO/eH@x6X)b!nY\"><field name=\"NUM\">0</field></shadow><block type=\"logic_boolean\" id=\"*@-j9++E2Iv1uR,oC6}G\"><field name=\"BOOL\">TRUE</field></block></value><next><block type=\"controls_if\" id=\"``NNh(k:iJqr*;`z=*g[\"><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"c_%jKGn/Lxw#b+CTvQ%/\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_negate\" id=\"!o_fF^2`~o2OHl#mZYf_\"><value name=\"BOOL\"><shadow type=\"logic_boolean\" id=\"T2m#d.C0m.Nfeb2k@RM@\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"variables_get\" id=\"M[,0]}29F43GI%:DhA}j\"><field name=\"VAR\" id=\"eg1bj;oc(H4Mc.%c%#S;\">isDancing</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"iS`h2kT-$5#~Yut?$nU6\"><field name=\"VAR\" id=\"eg1bj;oc(H4Mc.%c%#S;\">isDancing</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"!MK/Xl3oYC,WvTQy?Hz?\"><field name=\"NUM\">0</field></shadow><block type=\"logic_boolean\" id=\"IszoS|d58mzdf3bD%-{t\"><field name=\"BOOL\">TRUE</field></block></value><next><block type=\"function_call\" id=\"U`M;Xx-(:S7]G.]JB3k!\"><mutation name=\"danceStep\" functionid=\".2Ei*rTffZYE4o)xqY]-\"></mutation><next><block type=\"variables_set\" id=\"9)ZFM-5yqcucDn*GWl|@\"><field name=\"VAR\" id=\"eg1bj;oc(H4Mc.%c%#S;\">isDancing</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"ZWEt/lC5cgOJ`[p:2(`.\"><field name=\"NUM\">0</field></shadow><block type=\"logic_boolean\" id=\"]yxiA{L:B[t9a4O2g5[6\"><field name=\"BOOL\">FALSE</field></block></value></block></next></block></next></block></statement></block></next></block></statement></block></statement><statement name=\"ELSE\"><block type=\"variables_set\" id=\"3MPr_CG2nZKh@|{-=@%x\"><field name=\"VAR\" id=\"qBCk*UpJ`m1t[.(n?E0|\">beatDetected</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"{k+h3q(KL,PS21/7l,Fk\"><field name=\"NUM\">0</field></shadow><block type=\"logic_boolean\" id=\"OuEcq4jC(o6[9el4fx{2\"><field name=\"BOOL\">FALSE</field></block></value></block></statement><next><block type=\"device_pause\" id=\"F+*Ju$e;yw4Y*yf$LTfW\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"s1hd;ua6;PW$j.!Ed@5b\"><field name=\"ms\">20</field></shadow></value></block></next></block></next></block></statement></block><block type=\"function_definition\" id=\"H~prYg%%ktl[e,!WAc`S\" x=\"1539\" y=\"0\"><mutation name=\"danceStep\" functionid=\".2Ei*rTffZYE4o)xqY]-\"></mutation><field name=\"function_name\">danceStep</field><statement name=\"STACK\"><block type=\"variables_set\" id=\"oq;)iw%UcX,+MiOG^#/D\"><field name=\"VAR\" id=\"iC6pF~/(m6G}Wzet=S~:\">moveType</field><comment pinned=\"false\" h=\"80\" w=\"160\">Randomly choose a dance move</comment><value name=\"VALUE\"><shadow type=\"math_number\" id=\"0_ef))qtu$pouLV$S?8r\"><field name=\"NUM\">0</field></shadow><block type=\"device_random_deprecated\" id=\"Hmo3m3;xb49sVeFZbu0Q\"><value name=\"min\"><shadow type=\"math_number\" id=\"K.IDnLZD8Z;ru[C)y@zZ\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\" id=\":@Z;cU$H=BQ6#DUQzh7+\"><field name=\"NUM\">2</field></shadow></value></block></value><next><block type=\"typescript_statement\" id=\"_K!pB]=[S7A8N0+Kf$q{\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter + SWING_ANGLE);\" numlines=\"1\"></mutation><next><block type=\"typescript_statement\" id=\"S`|VJw$:YZv{|dHu$/t^\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter - SWING_ANGLE);\" numlines=\"1\"></mutation><next><block type=\"device_pause\" id=\"K)IH6d|QN[oMhoh,0|c`\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"T*kg(sc$x.Q}^l];7Xe+\"><field name=\"ms\">NaN</field></shadow><block type=\"math_arithmetic\" id=\"y$UiC#ll6eb!a%3q3XoH\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"W^|zyIOGJ{xRnH}yKctc\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"r~#IP/-]};HSy1C1Zdzs\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"x2KB*i|k*sD{Wi/P}5c^\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"typescript_statement\" id=\"~kLRj)D@c!9=R[C_wiV~\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter - SWING_ANGLE);\" numlines=\"1\"></mutation><next><block type=\"typescript_statement\" id=\"1tXti@z(1J/^.B;#|oU!\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter + SWING_ANGLE);\" numlines=\"1\"></mutation><next><block type=\"device_pause\" id=\"];?a@n7h+~oVBtxFUP$n\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"Oa[bnPgznO2x@1]a[}z^\"><field name=\"ms\">NaN</field></shadow><block type=\"math_arithmetic\" id=\"mR@_v+BF^2$wh#g?vXOX\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"h|N[[kN#TduU%B85cHnd\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\",C6_.WL,0G/Y{h@+aWkT\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"60Z~1MQs:ZM)ig#eYxC*\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"controls_if\" id=\"7.2#ZRmBfCC7zt0FZ[n?\"><mutation elseif=\"1\" else=\"1\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Perform the chosen move\nNo rotation tracking needed for forward/backward</comment><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"(]57x[}{NI~8iQ:l%@?r\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"uQSM(yRP!?=vaS?!JGqk\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"t+T9:@Ve!)/#C:_HEy4V\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"ADU?`PU~bLP})MSv9uGh\"><field name=\"VAR\" id=\"iC6pF~/(m6G}Wzet=S~:\">moveType</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"Tt~^~pv2%F0F=^.3fN~#\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"controls_if\" id=\"^RTyAu!4ssf,[OOE2M.q\"><mutation else=\"1\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">Forward/Backward</comment><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"i!7thurEWt+.y:[1UZeW\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"I2@nxWePDz61u+XM}JA0\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"vRmU{!=mKy:SqyQ6OJVF\"><field name=\"NUM\">0</field></shadow><block type=\"math_modulo\" id=\"W2R,B+Zwzi9wiQQ(M])C\"><value name=\"DIVIDEND\"><shadow type=\"math_number\" id=\"SwE4flRpfMN|*iFX|fIQ\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"3k#8Y1O*lil.MEX9AQtg\"><field name=\"VAR\" id=\"-X(~sh(tbdqXx:7+)[bU\">movementCounter</field></block></value><value name=\"DIVISOR\"><shadow type=\"math_number\" id=\"$^^B`jN93-!Rl~wAYP1L\"><field name=\"NUM\">2</field></shadow></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"Eu9GCUr^%0deL#U7-T}@\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"bitbot_motor\" id=\"qg~EZQC}s~f40Ghl%|+l\"><field name=\"motor\">BBMotor.Both</field><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"+$Mu_*2K3|`*G%ABLR/d\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\" id=\"fd]h=]]TM[EU4g[UcgV{\"><field name=\"VAR\" id=\"g?+%^C#MtOFl+NTjAf%U\">MOVE_SPEED</field></block></value><next><block type=\"device_pause\" id=\"p~Q/ySwtA%,vzc@vPtA_\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"#ret^(?70#mZCLj#;?s_\"><field name=\"ms\">NaN</field></shadow><block type=\"math_arithmetic\" id=\"V^{-rt8nm2XX([GPtznW\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"x54vOGa+L;#bTb|TlLdf\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"QYY|M9j`zqyvl{e#;um=\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\".6:JbW7.J-=9=$kcDD7G\"><field name=\"NUM\">2</field></shadow></value></block></value><next><block type=\"BBstop\" id=\"?w(N?;o*^0Ei1V[q5}v,\"><field name=\"mode\">BBStopMode.Brake</field></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"bitbot_motor\" id=\"F1I}8}M+QplnW-Eia`E_\"><field name=\"motor\">BBMotor.Both</field><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"}OHbi1dM[HBd_::te}Z^\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"math_arithmetic\" id=\"X=YodIs~#Ag$U~k`#?4|\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"gd@1NYpm8f~3OQR-M]Wg\"><field name=\"NUM\">0</field></shadow></value><value name=\"B\"><shadow type=\"math_number\" id=\"B0O,D:4JT$5@#s+U*AV#\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"n,nMT2OHTI|*r@JcMJ]-\"><field name=\"VAR\" id=\"g?+%^C#MtOFl+NTjAf%U\">MOVE_SPEED</field></block></value></block></value><next><block type=\"device_pause\" id=\"Th!l;$!nvmu6BH5cKhYT\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"W`a=KO@@GH_j)2$.xq@F\"><field name=\"ms\">NaN</field></shadow><block type=\"math_arithmetic\" id=\"3tjcxq(kVHwiL,g,oo!8\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"am4k4i*B!K*#RwhJBl?:\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"H7a`+ucMa6Hv=(O$TKDK\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"([edPof0/~x]+:U~~R!L\"><field name=\"NUM\">2</field></shadow></value></block></value><next><block type=\"BBstop\" id=\"L4,`4b1VBrE1}q6$_kt|\"><field name=\"mode\">BBStopMode.Brake</field></block></next></block></next></block></statement></block></statement><value name=\"IF1\"><shadow type=\"logic_boolean\" id=\"u!Cveo8[6]ci^XCx9)r9\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\";}JjGFJacF~sJ;zBF|m*\"><field name=\"OP\">EQ</field><value name=\"A\"><shadow type=\"math_number\" id=\"N,ZRVTgg0d~Q@89(Yo1p\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"0JKiqR`GF#^$_hsstrMG\"><field name=\"VAR\" id=\"iC6pF~/(m6G}Wzet=S~:\">moveType</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"]C0/*D6Bk_Hf7VE9r=^J\"><field name=\"NUM\">1</field></shadow></value></block></value><statement name=\"DO1\"><block type=\"bitbot_motor\" id=\"9[ZT--{?[o?vrlOiuu/_\"><field name=\"motor\">BBMotor.Left</field><comment pinned=\"false\" h=\"80\" w=\"160\">Rotate Left</comment><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"X+taW0=kca{O/P|Tza@W\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"math_arithmetic\" id=\"[F#vYM4X7vn0ITew)pMo\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"T,IG{#@U3z=!0+/#jZ#!\"><field name=\"NUM\">0</field></shadow></value><value name=\"B\"><shadow type=\"math_number\" id=\"YE||GxEMYZmJSEvUV%,0\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"j$.J6T1gP^nR|)Pqc*@n\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value></block></value><next><block type=\"bitbot_motor\" id=\"M99@;0oSYp`!nxI|n{+,\"><field name=\"motor\">BBMotor.Right</field><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"t,8v9mOL9sV$J6scYx0b\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\" id=\"bdhC4w7AgE)2RaH+xOV|\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value><next><block type=\"device_pause\" id=\"$~5/ynFmCc]w9^h;jvI/\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"IO)xy)rwY7t(lg-_#$X|\"><field name=\"ms\">NaN</field></shadow><block type=\"math_arithmetic\" id=\"t0_1BhTuUXc,J=1;vstx\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"rDtvzI/YAS4,RPUDW5Vb\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"6%|rhh^T1O16!F+(2:`k\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"Z7.r1zG?qg`]:V.54nZT\"><field name=\"NUM\">2</field></shadow></value></block></value><next><block type=\"BBstop\" id=\"f[[Y,a=yvoZ9F9/BtI6.\"><field name=\"mode\">BBStopMode.Brake</field><next><block type=\"variables_change\" id=\"1WI{xDbj#cL!Z$[JxY#M\"><field name=\"VAR\" id=\"-C39nIq=xM:T=hVo3$)u\">accumulatedRotation</field><comment pinned=\"false\" h=\"80\" w=\"160\">Track rotation (negative for left)</comment><value name=\"VALUE\"><shadow type=\"math_number\" id=\"k6IhW8t`R6-mWZ#kX18i\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"y-90]D(ta%ZpLZkf`dai\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"7L:8u8f1c[Qh~$%KhZ@N\"><field name=\"NUM\">0</field></shadow></value><value name=\"B\"><shadow type=\"math_number\" id=\"VGqFa_4~rc,Ubzk~I}To\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"/?jHNQ6Ttj%Cv:pBhKwS\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"-y9Pl-;;)xQ%X721G(m-\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"d|wb{baz59WaaQLS57PJ\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"Nb=.CcZ+x[HYJ|_Xdn.~\"><field name=\"NUM\">2</field></shadow></value></block></value></block></value></block></next></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"bitbot_motor\" id=\"?Cwj8^caxpjSo.t?M,zy\"><field name=\"motor\">BBMotor.Left</field><comment pinned=\"false\" h=\"80\" w=\"160\">Rotate Right</comment><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"QX:-DI^haS*ryNuzBdK@\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\" id=\"b?pymF(Myq$jNws3@!3%\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value><next><block type=\"bitbot_motor\" id=\"AO_x!1MPb!$l?)@mEpR%\"><field name=\"motor\">BBMotor.Right</field><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"]QXUfewpa8j:-1M2ww6!\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"math_arithmetic\" id=\"aNmk{.][I8E*0UbbBT6l\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"`vh8;q($}2[1z+|/O/,:\"><field name=\"NUM\">0</field></shadow></value><value name=\"B\"><shadow type=\"math_number\" id=\"Ws,k~g-J(P^v4$GZQ(*^\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"xX#?q-XGI=iN,FuvBp4b\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value></block></value><next><block type=\"device_pause\" id=\"KQtx2_3T3os*vSS@v5~:\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"#D//BopLjtg8$g2hVVMq\"><field name=\"ms\">NaN</field></shadow><block type=\"math_arithmetic\" id=\"kXrpT;fIyk}];bgA[=H+\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"4.btgRu(0l:hxU4C,76)\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"fk!XS^Xb=YG^)]Cr64;D\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"_sdHXb7tB#qm$V7DFp5i\"><field name=\"NUM\">2</field></shadow></value></block></value><next><block type=\"BBstop\" id=\"E12X`:}u~}1j#vd.tGtA\"><field name=\"mode\">BBStopMode.Brake</field><next><block type=\"variables_change\" id=\"6Mzb1!_Tej4eTU*D8#dj\"><field name=\"VAR\" id=\"-C39nIq=xM:T=hVo3$)u\">accumulatedRotation</field><comment pinned=\"false\" h=\"80\" w=\"160\">Track rotation (positive for right)</comment><value name=\"VALUE\"><shadow type=\"math_number\" id=\"cxy_:i+[uK,6I_UfZdyO\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"DiD/_VfJWRHf(1Y2r^4b\"><field name=\"OP\">DIVIDE</field><value name=\"A\"><shadow type=\"math_number\" id=\"Fe.ZUJJL|7~0%w@{ALrD\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"=+wmL}b@T!+ih:MCiMyb\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"0s8KAvRyNuy=;}Os=Mz$\"><field name=\"NUM\">2</field></shadow></value></block></value></block></next></block></next></block></next></block></next></block></statement><next><block type=\"variables_change\" id=\"#^9?JO[3C2Ha9(#drcTs\"><field name=\"VAR\" id=\"-X(~sh(tbdqXx:7+)[bU\">movementCounter</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"v#_6#2z~EL+7pmoug{7E\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"controls_if\" id=\"]=0fzJ`ly69Cx0UV#{Rc\"><comment pinned=\"false\" h=\"80\" w=\"160\">Corrective Rotation (if needed)</comment><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"Op,wV`j`(:ecA)^SNIdK\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"l$0qJl7p`[vHB^qT3(mU\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\" id=\"Nj%N1M]8a5,4rco[0mAX\"><field name=\"NUM\">0</field></shadow><block type=\"math_op3\" id=\";zX%^c8KjE,e%:BEsYrw\"><value name=\"x\"><block type=\"variables_get\" id=\"Uz,@fH30.rrYI6XvvnxY\"><field name=\"VAR\" id=\"-C39nIq=xM:T=hVo3$)u\">accumulatedRotation</field></block></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"/,:2!eBh{Be}l!X8Vm+w\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"V[}eXQ7!vgnZv~;MRUc-\"><field name=\"VAR\" id=\"zHJ{*2z*!49QRMC79yYT\">DANCE_DURATION</field></block></value></block></value><statement name=\"DO0\"><block type=\"variables_set\" id=\"45b_Zbk2N9l+KTuwnbhc\"><field name=\"VAR\" id=\"!e9vs/~IwS9XIb;./A}d\">correctionTime</field><value name=\"VALUE\"><shadow type=\"math_number\" id=\"3NEtg*}.a,,h!yf6{/oF\"><field name=\"NUM\">0</field></shadow><block type=\"math_arithmetic\" id=\"[Qja1YWq~=)UAIWxm0=:\"><field name=\"OP\">MULTIPLY</field><value name=\"A\"><shadow type=\"math_number\" id=\"OBrvODK_:I(8_Y[saZqF\"><field name=\"NUM\">0</field></shadow><block type=\"math_op3\" id=\"~U$|Yqs0PP^3J2#u^cjI\"><value name=\"x\"><block type=\"variables_get\" id=\"-XqUDh/t@LpK912IW4s.\"><field name=\"VAR\" id=\"-C39nIq=xM:T=hVo3$)u\">accumulatedRotation</field></block></value></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"/|K:cbX(f9?j!Xt.AM0}\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"1ln,,ie3t/OE):Bo@eN(\"><field name=\"VAR\" id=\"k}(0t^lgxo;l67C{R.Pf\">ROTATION_CORRECTION_FACTOR</field></block></value></block></value><next><block type=\"controls_if\" id=\"gbD#0~DqYO+=TN(pvp_L\"><mutation else=\"1\"></mutation><value name=\"IF0\"><shadow type=\"logic_boolean\" id=\"eDGW|loXq#)0F@IO|W%3\"><field name=\"BOOL\">TRUE</field></shadow><block type=\"logic_compare\" id=\"#-YHC$lGG3f:5=nuajdT\"><field name=\"OP\">GT</field><value name=\"A\"><shadow type=\"math_number\" id=\"^6-:=x4yJFBd76$J8`No\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"Dl7S~#F.mtn`1}j71{]x\"><field name=\"VAR\" id=\"-C39nIq=xM:T=hVo3$)u\">accumulatedRotation</field></block></value><value name=\"B\"><shadow type=\"math_number\" id=\"=)CS[gGn?dVd0G5/9`R6\"><field name=\"NUM\">0</field></shadow></value></block></value><statement name=\"DO0\"><block type=\"bitbot_motor\" id=\"y)YfGh(OH?n@Ui7(Ljda\"><field name=\"motor\">BBMotor.Left</field><comment pinned=\"false\" h=\"80\" w=\"160\">Correct for rightward drift</comment><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"|iHXUDP{HH.lKsPBDv~{\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"math_arithmetic\" id=\"Fq)!n*PNmnVCJ@5=;77c\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"5+!u8(i;8MO|[B[))g9|\"><field name=\"NUM\">0</field></shadow></value><value name=\"B\"><shadow type=\"math_number\" id=\"ICB!OU+;vJP$guGZuYXQ\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"|z%v$;?.OeIO-=dJ%d$P\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value></block></value><next><block type=\"bitbot_motor\" id=\"%~]Axy{Z,vu[7{.HxYfu\"><field name=\"motor\">BBMotor.Right</field><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"n30KP}^(/9pf[RrE7X*a\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\" id=\",Q+6,NQo?mm;T2wy~Eh+\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value><next><block type=\"device_pause\" id=\"k$xc~IFFToNr[#b4@m+A\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"cHpVP_ZV@WGvF1(]+]5=\"><field name=\"ms\">NaN</field></shadow><block type=\"variables_get\" id=\"6wf*ExBC%73b(HQT1pi@\"><field name=\"VAR\" id=\"!e9vs/~IwS9XIb;./A}d\">correctionTime</field></block></value><next><block type=\"BBstop\" id=\"T{!QB;mjz%03L=/5GYi!\"><field name=\"mode\">BBStopMode.Brake</field></block></next></block></next></block></next></block></statement><statement name=\"ELSE\"><block type=\"bitbot_motor\" id=\"IzHFYyOdFN60xf#.8MyM\"><field name=\"motor\">BBMotor.Left</field><comment pinned=\"false\" h=\"80\" w=\"160\">Correct for leftward drift</comment><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"!6qziWeeNwnJ`P/~]RB_\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"variables_get\" id=\"aeA%-C+6K8P}-SFat;5y\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value><next><block type=\"bitbot_motor\" id=\"rV{yigm]Gnt2IWLZ[kLk\"><field name=\"motor\">BBMotor.Right</field><value name=\"speed\"><shadow type=\"math_number_minmax\" id=\"OCh~lgS]}d-e=+tnEp~[\"><mutation min=\"-1023\" max=\"1023\" precision=\"0\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"math_arithmetic\" id=\"=ECpzdjT~_~P]eLL`Zq6\"><field name=\"OP\">MINUS</field><value name=\"A\"><shadow type=\"math_number\" id=\"2n7ms`%4#xyV7rQt5mrY\"><field name=\"NUM\">0</field></shadow></value><value name=\"B\"><shadow type=\"math_number\" id=\"QY,,m67^^nq:?{M{[El#\"><field name=\"NUM\">0</field></shadow><block type=\"variables_get\" id=\"MoVyT+O4FbGrwm,_%FVQ\"><field name=\"VAR\" id=\"-:A8s]|ObXmS;!Ttw0Y+\">ROTATE_SPEED</field></block></value></block></value><next><block type=\"device_pause\" id=\"9JWzGWZ@qSLGk|HM*w2l\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"c2B$uF2$$bC=ck^q;Owb\"><field name=\"ms\">NaN</field></shadow><block type=\"variables_get\" id=\"iq7!HJ9$I/BI$jI=kN]f\"><field name=\"VAR\" id=\"!e9vs/~IwS9XIb;./A}d\">correctionTime</field></block></value><next><block type=\"BBstop\" id=\";I6tx{*Hco#[?^YkTQ2M\"><field name=\"mode\">BBStopMode.Brake</field></block></next></block></next></block></next></block></statement><next><block type=\"variables_set\" id=\"[!Ybm}R9pw.3O:PM[6(I\"><field name=\"VAR\" id=\"-C39nIq=xM:T=hVo3$)u\">accumulatedRotation</field><comment pinned=\"false\" h=\"80\" w=\"160\">Reset after correction</comment><value name=\"VALUE\"><shadow type=\"math_number\" id=\"Xy?rXXP(Kid)CTpg@%%O\"><field name=\"NUM\">0</field></shadow></value></block></next></block></next></block></statement><next><block type=\"typescript_statement\" id=\")ek7i8%f89{T^raiwsk(\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter);\" numlines=\"1\"></mutation><next><block type=\"typescript_statement\" id=\"Kt5y8*_cyij{6]5}c-_+\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter);\" numlines=\"1\"></mutation><next><block type=\"device_pause\" id=\"6J?v=7Cr|$szPqwNhIiq\"><value name=\"pause\"><shadow type=\"timePicker\" id=\"b50-MVaWhmz@|}tFx;wg\"><field name=\"ms\">NaN</field></shadow><block type=\"variables_get\" id=\"w6pf4pAU*n[au~oW)GkW\"><field name=\"VAR\" id=\"5x9f^?i9BP-Ykn5e4e3=\">SHORT_DELAY</field></block></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement"],[1,"/variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\""],[0,"></b"]],"start1":63,"start2":63,"length1":31208,"length2":111}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"tion"],[-1," and Position Correction\n * "],[0,"\n * "]],"start1":59,"start2":59,"length1":36,"length2":8},{"diffs":[[0,".\n *"],[-1,"/\nfunction danceStep () {\n    // Randomly choose a dance move\n    moveType = Math.randomRange(0, 2)\n    bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter + SWING_ANGLE);\nbitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter - SWING_ANGLE);\nbasic.pause(DANCE_DURATION / 4)\n    bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter - SWING_ANGLE);\nbitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter + SWING_ANGLE);\nbasic.pause(DANCE_DURATION / 4)\n    // Perform the chosen move\n    // No rotation tracking needed for forward/backward\n    if (moveType == 0) {\n        // Forward/Backward\n        if (movementCounter % 2 == 0) {\n            bitbot.motor(BBMotor.Both, MOVE_SPEED)\n            basic.pause(DANCE_DURATION / 2)\n            bitbot.stop(BBStopMode.Brake)\n        } else {\n            bitbot.motor(BBMotor.Both, 0 - MOVE_SPEED)\n            basic.pause(DANCE_DURATION / 2)\n            bitbot.stop(BBStopMode.Brake)\n        }\n    } else if (moveType == 1) {\n        // Rotate Left\n        bitbot.motor(BBMotor.Left, 0 - ROTATE_SPEED)\n        bitbot.motor(BBMotor.Right, ROTATE_SPEED)\n        basic.pause(DANCE_DURATION / 2)\n        bitbot.stop(BBStopMode.Brake)\n        // Track rotation (negative for left)\n        accumulatedRotation += 0 - DANCE_DURATION / 2\n    } else {\n        // Rotate Right\n        bitbot.motor(BBMotor.Left, ROTATE_SPEED)\n        bitbot.motor(BBMotor.Right, 0 - ROTATE_SPEED)\n    "],[1," This code is designed for the Bit:Bot Pro.\n * Requires a 3D printed attachment for arms connected to the servos.\n */\n\n// Configuration Constants (Adjust as needed)\nconst SWING_ANGLE = 45;        // Max servo swing angle (degrees)\nconst MOVE_SPEED = 40;         // Robot forward/backward speed (0-100)\nconst SOUND_THRESHOLD = 80;    // Microphone sensitivity (adjust for your environment)\nconst DANCE_DURATION = 1000;    // How long each \"dance move\" lasts (ms).\nconst SHORT_DELAY = 100;      //Short delay to smooth movements.\nconst ARM_LEFT_SERVO = 1;    // Servo 1\nconst ARM_RIGHT_SERVO = 2;   // Servo 2\n\n// Global Variables\nlet leftArmCenter = 90;       // Center position for left arm servo\nlet rightArmCenter = 90;     // Center position for right arm servo\nlet isDancing = false;        // Flag to indicate dancing state\nlet lastSoundLevel = 0;       // Store the previous sound level\nlet beatDetected = false;     // Flag for beat detection\nlet movementCounter = 0;     // Count robot moves.\n\n// Initialize servos to center position\nbitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter);\nbitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter);\nbasic.pause(500); // Give servos time to settle\n\nfunction danceStep() {\n    // 1. Swing Arms (Opposite directions)\n    bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter + SWING_ANGLE);\n    bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter - SWING_ANGLE);\n"],[0,"    "]],"start1":124,"start2":124,"length1":1405,"length2":1405},{"diffs":[[0,"N / "],[-1,"2)\n    "],[1,"4);\n\n"],[0,"    "]],"start1":1554,"start2":1554,"length1":15,"length2":13},{"diffs":[[0,"bot."],[-1,"stop(BBStopMode.Brake)\n        // Track rotation (positive for right)\n        accumulatedRotation += DANCE_DURATION / 2\n    }\n    movementCounter += 1\n    // Corrective Rotation (if needed)\n    if (Math.abs(accumulatedRotation) > DANCE_DURATION) {\n        correctionTime = Math.abs(accumulatedRotation) * ROTATION_CORRECTION_FACTOR\n        if (accumulatedRotation > 0) {\n            // Correct for rightward drift\n            bitbot.motor(BBMotor.Left, 0 - ROTATE_SPEED)\n            bitbot.motor(BBMotor.Right, ROTATE_SPEED)\n            basic.pause(correctionTime)\n    "],[1,"bbSetServo(ARM_LEFT_SERVO, leftArmCenter - SWING_ANGLE);\n    bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter + SWING_ANGLE);\n    basic.pause(DANCE_DURATION / 4);\n\n    // 2. Move body. Alternate forward and backward.\n    if (movementCounter % 2 == 0) {\n        bitbot.motor(Forward, MOVE_SPEED); // Corrected: No 'bitbot.' prefix\n        basic.pause(DANCE_DURATION / 2);\n"],[0,"    "]],"start1":1570,"start2":1570,"length1":577,"length2":380},{"diffs":[[0,"ake)"],[-1,"\n        } else {\n "],[1,";"],[0,"    "]],"start1":1979,"start2":1979,"length1":27,"length2":9},{"diffs":[[0,"rect"],[-1," for leftward drift\n            bitbot.motor(BBMotor.Left, ROTATE_SPEED)\n            bitbot.motor(BBMotor.Right, 0 - ROTATE_SPEED)\n            basic.pause(correctionTime)\n "],[1,"ed: No 'bitbot.' prefix\n    } else {\n        bitbot.motor(BBMotor.Backward, MOVE_SPEED);// Corrected: No 'bitbot.' prefix\n        basic.pause(DANCE_DURATION / 2);\n"],[0,"        "],[-1,"   "],[0,"bitb"]],"start1":2001,"start2":2001,"length1":191,"length2":179},{"diffs":[[0,"ake)"],[-1,"\n  "],[1,";"],[0,"      "],[-1,"}\n"],[0,"     "],[-1,"   // Reset after correction\n        accumulatedRotation = 0\n    }\n    bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter);\nbitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter);\nbasic.pause(SHORT_DELAY)\n}\nlet isDancing = false\nlet beatDetected = false\nlet lastSoundLevel = 0\nlet correctionTime = 0\nlet accumulatedRotation = 0\nlet movementCounter = 0\nlet moveType = 0\nlet ROTATION_CORRECTION_FACTOR = 0\nlet SHORT_DELAY = 0\nlet DANCE_DURATION = 0\nlet ROTATE_SPEED = 0\nlet MOVE_SPEED = 0\n// Configuration Constants\nlet SWING_ANGLE = 45\nMOVE_SPEED = 40\nROTATE_SPEED = 40\nlet SOUND_THRESHOLD = 80\nDANCE_DURATION = 500\nSHORT_DELAY = 50\nlet ARM_LEFT_SERVO = 1\nlet ARM_RIGHT_SERVO = 2\n// Adjust this (0.8 - 1.0)\nROTATION_CORRECTION_FACTOR = 0.95\n// Global Variables\nlet leftArmCenter = 90\nlet rightArmCenter = 90\n"],[1,"// Corrected: No 'bitbot.' prefix\n    }\n    movementCounter++;\n\n    // 3. Return Arms to center\n    "],[0,"bitb"]],"start1":2201,"start2":2201,"length1":824,"length2":120},{"diffs":[[0,"leftArmCenter);\n"],[1,"    "],[0,"bitbot.bbSetServ"]],"start1":2351,"start2":2351,"length1":32,"length2":36},{"diffs":[[0,"r);\n"],[-1,"basic.pause(500)\n// Optional: Display sound level\nbasic.forever(function () {\n    led.plotBarGraph(\n    lastSoundLevel,\n    255\n    )\n})"],[1,"    basic.pause(SHORT_DELAY);\n}\n"],[0,"\n// "]],"start1":2419,"start2":2419,"length1":144,"length2":40},{"diffs":[[0,"dLevel()"],[1,";\n"],[0,"\n    if "]],"start1":2528,"start2":2528,"length1":16,"length2":18},{"diffs":[[0,"   if (!"],[-1,"("],[0,"beatDete"]],"start1":2588,"start2":2588,"length1":17,"length2":16},{"diffs":[[0,"etected)"],[-1,")"],[0," {\n     "]],"start1":2601,"start2":2601,"length1":17,"length2":16},{"diffs":[[0,"ected = true"],[1,";"],[0,"\n           "]],"start1":2631,"start2":2631,"length1":24,"length2":25},{"diffs":[[0,"   if (!"],[-1,"("],[0,"isDancin"]],"start1":2654,"start2":2654,"length1":17,"length2":16},{"diffs":[[0,"Dancing)"],[-1,")"],[0," {\n     "]],"start1":2664,"start2":2664,"length1":17,"length2":16},{"diffs":[[0,"g = true"],[1,";"],[0,"\n       "]],"start1":2699,"start2":2699,"length1":16,"length2":17},{"diffs":[[0,"ceStep()"],[1,";"],[0,"\n       "]],"start1":2728,"start2":2728,"length1":16,"length2":17},{"diffs":[[0,"cing = false"],[1,";"],[0,"\n           "]],"start1":2759,"start2":2759,"length1":24,"length2":25},{"diffs":[[0," = false"],[1,";"],[0,"\n    }\n "]],"start1":2830,"start2":2830,"length1":16,"length2":17},{"diffs":[[0,"(20)"],[1,";"],[0,"\n})\n"],[1,"\n// Optional: Display sound level\nbasic.forever(function () {\n    led.plotBarGraph(lastSoundLevel, 255);\n})"]],"start1":2861,"start2":2861,"length1":8,"length2":116}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":290,"start2":290,"length1":52,"length2":8},{"diffs":[[0,"itor\": \""],[-1,"block"],[1,"t"],[0,"sprj\"\n}\n"]],"start1":310,"start2":310,"length1":21,"length2":17}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1741135194884,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"danserobot-med-armer\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1741137068151,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"/**\n * Bit:Bot Pro Dancing Robot with Microphone Beat Detection\n * Uses MakeCode Bit:Bot extension (for Bit:Bot Classic/Pro).\n * This code is designed for the Bit:Bot Pro.\n * Requires a 3D printed attachment for arms connected to the servos.\n */\n\n// Configuration Constants (Adjust as needed)\nconst SWING_ANGLE = 45;        // Max servo swing angle (degrees)\nconst MOVE_SPEED = 40;         // Robot forward/backward speed (0-100)\nconst SOUND_THRESHOLD = 80;    // Microphone sensitivity (adjust for your environment)\nconst DANCE_DURATION = 1000;    // How long each \"dance move\" lasts (ms).\nconst SHORT_DELAY = 100;      // Short delay to smooth movements.\nconst ARM_LEFT_SERVO = 1;    // Servo 1\nconst ARM_RIGHT_SERVO = 2;   // Servo 2\n\n// Global Variables\nlet leftArmCenter = 90;       // Center position for left arm servo\nlet rightArmCenter = 90;     // Center position for right arm servo\nlet isDancing = false;        // Flag to indicate dancing state\nlet lastSoundLevel = 0;       // Store the previous sound level\nlet beatDetected = false;     // Flag for beat detection\nlet movementCounter = 0;     // Count robot moves.\n\n// Initialize servos to center position\nbitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter);\nbitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter);\nbasic.pause(500); // Give servos time to settle\n\nfunction danceStep() {\n    // 1. Swing Arms (Opposite directions)\n    bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter + SWING_ANGLE);\n    bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter - SWING_ANGLE);\n    basic.pause(DANCE_DURATION / 4);\n\n    bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter - SWING_ANGLE);\n    bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter + SWING_ANGLE);\n    basic.pause(DANCE_DURATION / 4);\n\n    // 2. Move body. Alternate forward and backward.\n    if (movementCounter % 2 == 0) {\n        bitbot.motor(BBMotor.Both, MOVE_SPEED); // Forward: Positive speed\n        basic.pause(DANCE_DURATION / 2);\n        bitbot.stop(BBStopMode.Brake);\n    } else {\n        bitbot.motor(BBMotor.Both, -MOVE_SPEED); // Backward: Negative speed\n        basic.pause(DANCE_DURATION / 2);\n        bitbot.stop(BBStopMode.Brake);\n    }\n    movementCounter++;\n\n    // 3. Return Arms to center\n    bitbot.bbSetServo(ARM_LEFT_SERVO, leftArmCenter);\n    bitbot.bbSetServo(ARM_RIGHT_SERVO, rightArmCenter);\n    basic.pause(SHORT_DELAY);\n}\n\n// Main Loop\nbasic.forever(function () {\n    lastSoundLevel = input.soundLevel();\n\n    if (lastSoundLevel > SOUND_THRESHOLD) {\n        if (!beatDetected) {\n            beatDetected = true;\n            if (!isDancing) {\n                isDancing = true;\n                danceStep();\n                isDancing = false;\n            }\n        }\n    } else {\n        beatDetected = false;\n    }\n    basic.pause(20);\n})\n\n// Optional: Display sound level\nbasic.forever(function () {\n    led.plotBarGraph(lastSoundLevel, 255);\n})","README.md":"","pxt.json":"{\n    \"name\": \"danserobot-med-armer\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"BitBot\": \"github:4tronix/bitbot#v2.1.13\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1741137199551}